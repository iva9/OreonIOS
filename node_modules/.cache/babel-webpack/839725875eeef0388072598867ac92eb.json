{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { NavParams, ModalController, LoadingController } from '@ionic/angular';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { UserService } from '../user.service';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { NovoEventoPage } from '../novo-evento/novo-evento.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nimport * as i2 from \"@ionic-native/camera/ngx\";\nimport * as i3 from \"../user.service\";\nimport * as i4 from \"@angular/fire/firestore\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/fire/database\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"../novo-evento/novo-evento.page\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/fire/storage\";\nconst _c0 = [\"fileButton\"];\nexport let EditarModalPage = /*#__PURE__*/(() => {\n  class EditarModalPage {\n    constructor(storage, modal, auth, camera, user, firestore, alert, navparams, loadingC, firebase, route, novoe) {\n      this.storage = storage;\n      this.modal = modal;\n      this.auth = auth;\n      this.camera = camera;\n      this.user = user;\n      this.firestore = firestore;\n      this.alert = alert;\n      this.navparams = navparams;\n      this.loadingC = loadingC;\n      this.firebase = firebase;\n      this.route = route;\n      this.novoe = novoe;\n      this.roda = false;\n      this.selectedImage = null;\n      this.newUsername = '';\n      this.cidade = new Array();\n      this.c = new Array();\n    }\n\n    ngOnInit() {\n      this.x = this.navparams.get('customid');\n      this.img = \"../assets/icon/profile.png\";\n      this.getDataFromFire();\n    }\n\n    takePicture() {\n      this.camera.getPicture({\n        sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\n        destinationType: this.camera.DestinationType.DATA_URL\n      }).then(res => {\n        return this.img = \"data:image/jpeg;base64,\" + res;\n      }).catch(e => {\n        console.log(e);\n      });\n      return this.img;\n    }\n\n    showPreview(event) {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = e => this.img = e.target.result;\n\n        reader.readAsDataURL(event.target.files[0]);\n        this.selectedImage = event.target.files[0];\n        this.novoe.img = event.target.files[0];\n      } else {\n        this.img = \"../assets/icon/profile.png\";\n        this.selectedImage = null;\n      }\n    }\n\n    writeUserData() {\n      this.fileButton.nativeElement.click();\n    }\n\n    presentLoading() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.loading = yield this.loadingC.create({\n          cssClass: 'my-custom-class',\n          message: 'Espere um momento...',\n          duration: 2000\n        });\n        yield this.loading.present();\n      });\n    }\n\n    editar() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.presentLoading();\n        const todosnomes = this.items;\n        const osnomes = this.newUsername.toLowerCase();\n\n        if (!this.selectedImage && !this.newUsername) {\n          this.close();\n        }\n\n        if (!this.selectedImage) {\n          if (todosnomes.some(nome => nome.username.username == osnomes)) {\n            return this.showalert(\"Erro\", \"nome ja existente\");\n          }\n\n          if (this.newUsername != '') {\n            console.log('não tem imagem');\n            this.user.updateNome(this.newUsername.toLowerCase());\n          }\n        }\n\n        if (this.selectedImage) {\n          var name = this.selectedImage.name;\n          const fileReff = this.storage.ref(name);\n          (yield this.storage.upload(name, this.selectedImage)).downloadURL;\n          fileReff.getDownloadURL().subscribe(url => {\n            this.url = url;\n            console.log(this.url);\n\n            if (!this.newUsername) {\n              console.log('não tem nome');\n              this.user.updateImage(this.url);\n            } else {\n              this.user.updateProfile(this.url, this.newUsername);\n            }\n          });\n        }\n\n        this.close();\n        this.loadingC.dismiss();\n      });\n    }\n\n    criandomodal() {}\n\n    close() {\n      this.modal.dismiss();\n    }\n\n    getDataFromFire() {\n      this.firebase.list('users').valueChanges().subscribe(data => {\n        this.trataDados(data);\n      });\n    }\n\n    trataDados(dados) {\n      this.items = Object.keys(dados).map(i => dados[i]);\n    }\n\n    showalert(header, message) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alert.create({\n          header,\n          message,\n          buttons: [\"Ok\"]\n        });\n        yield alert.present();\n      });\n    }\n\n    geteventos() {\n      console.log(\"clicado\");\n      this.eventocidade = this.firestore.collection(\"eventos\", ref => ref.where(\"lugar\", \"==\", \"Rio de Janeiro\"));\n      return this.eventocidade.get().subscribe(coisas => {\n        coisas.forEach(b => {\n          const data = b.data();\n          const id = b.id;\n          this.a = Object.assign({\n            id\n          }, data);\n          this.c.push(this.a);\n          console.log(this.c);\n        });\n      });\n    }\n\n  }\n\n  EditarModalPage.ɵfac = function EditarModalPage_Factory(t) {\n    return new (t || EditarModalPage)(i0.ɵɵdirectiveInject(AngularFireStorage), i0.ɵɵdirectiveInject(UserService), i0.ɵɵdirectiveInject(i1.AngularFireAuth), i0.ɵɵdirectiveInject(i2.Camera), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.AngularFirestore), i0.ɵɵdirectiveInject(i5.AlertController), i0.ɵɵdirectiveInject(i5.NavParams), i0.ɵɵdirectiveInject(i5.LoadingController), i0.ɵɵdirectiveInject(i6.AngularFireDatabase), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i8.NovoEventoPage));\n  };\n\n  EditarModalPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditarModalPage,\n    selectors: [[\"app-editar-modal\"]],\n    viewQuery: function EditarModalPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileButton = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 2,\n    consts: [[\"size\", \"large\", 1, \"centertt\", 3, \"click\"], [1, \"center\"], [\"type\", \"file\", 1, \"filebtn\", 3, \"change\"], [\"fileButton\", \"\"], [1, \"imagem\", 3, \"src\", \"click\"], [\"no-lines\", \"\", 1, \"margintop\"], [\"lines\", \"none\"], [\"type\", \"text\", \"placeholder\", \"Nome de Usuario\", \"name\", \"id\", 3, \"ngModel\", \"ngModelChange\"], [1, \"publicar\"], [\"shape\", \"round\", 1, \"publicar\", 3, \"click\"]],\n    template: function EditarModalPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-title\", 0);\n        i0.ɵɵlistener(\"click\", function EditarModalPage_Template_ion_title_click_2_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(3, \"Editar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-content\");\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵelementStart(6, \"input\", 2, 3);\n        i0.ɵɵlistener(\"change\", function EditarModalPage_Template_input_change_6_listener($event) {\n          return ctx.showPreview($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"img\", 4);\n        i0.ɵɵlistener(\"click\", function EditarModalPage_Template_img_click_8_listener() {\n          return ctx.takePicture();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ion-list\", 5);\n        i0.ɵɵelementStart(10, \"ion-item\", 6);\n        i0.ɵɵelementStart(11, \"ion-input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarModalPage_Template_ion_input_ngModelChange_11_listener($event) {\n          return ctx.newUsername = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵelementStart(13, \"ion-button\", 9);\n        i0.ɵɵlistener(\"click\", function EditarModalPage_Template_ion_button_click_13_listener() {\n          return ctx.editar();\n        });\n        i0.ɵɵtext(14, \"Concluir\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"src\", ctx.img, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.newUsername);\n      }\n    },\n    directives: [i5.IonHeader, i5.IonToolbar, i5.IonTitle, i5.IonContent, i5.IonList, i5.IonItem, i5.IonInput, i5.TextValueAccessor, i9.NgControlStatus, i9.NgModel, i5.IonButton],\n    styles: [\".filebtn[_ngcontent-%COMP%]{opacity:0;position:absolute;top:-100em;left:-100em}ion-content[_ngcontent-%COMP%]{--background: black}ion-toolbar[_ngcontent-%COMP%]{--padding-top: 24px ;--background: black;--color: white}ion-item[_ngcontent-%COMP%]{--placeholder-color:#FFFFFF;--background:black;--color: white}.vertical-center[_ngcontent-%COMP%]{text-align:center;margin:auto;position:absolute;transform:translateX(-50%,-50%)}.centertt[_ngcontent-%COMP%]{text-align:center;background-color:#000;color:#fff}.publicar[_ngcontent-%COMP%]{text-align:center}.imagem[_ngcontent-%COMP%]{border-radius:50%;display:block;margin-left:auto;margin-right:auto;width:250px;height:250px}.margintop[_ngcontent-%COMP%]{margin-top:1em}\"]\n  });\n  return EditarModalPage;\n})();","map":null,"metadata":{},"sourceType":"module"}