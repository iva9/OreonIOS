{"ast":null,"code":"import { Injectable, Inject, Optional, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { of, Observable, pipe } from 'rxjs';\nimport { map, take, observeOn, switchMap, shareReplay } from 'rxjs/operators';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\n/**\n * @fileoverview added by tsickle\n * Generated from: auth-guard.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\n\nconst ɵ0 =\n/**\n* @param {?} user\n* @return {?}\n*/\nuser => !!user;\n/** @type {?} */\n\n\nconst loggedIn = /*#__PURE__*/map(ɵ0);\nlet AngularFireAuthGuard = /*#__PURE__*/(() => {\n  class AngularFireAuthGuard {\n    /**\n     * @param {?} options\n     * @param {?} nameOrConfig\n     * @param {?} zone\n     * @param {?} router\n     */\n    constructor(options, nameOrConfig, zone, router) {\n      this.router = router;\n\n      this.canActivate =\n      /**\n      * @param {?} next\n      * @param {?} state\n      * @return {?}\n      */\n      (next, state) => {\n        /** @type {?} */\n        const authPipeFactory =\n        /** @type {?} */\n        next.data.authGuardPipe || (\n        /**\n        * @return {?}\n        */\n        () => loggedIn);\n\n        return this.authState.pipe(take(1), authPipeFactory(next, state), map(\n        /**\n        * @param {?} can\n        * @return {?}\n        */\n        can => typeof can === 'boolean' ? can : this.router.createUrlTree(\n        /** @type {?} */\n        can)));\n      };\n      /** @type {?} */\n\n\n      const schedulers = new ɵAngularFireSchedulers(zone);\n      /** @type {?} */\n\n      const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n      /** @type {?} */\n\n      const auth = of(undefined).pipe(observeOn(new ɵAngularFireSchedulers(zone).outsideAngular), switchMap(\n      /**\n      * @return {?}\n      */\n      () => zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => import('firebase/auth'))), map(\n      /**\n      * @return {?}\n      */\n      () => ɵfirebaseAppFactory(options, zone, nameOrConfig)), map(\n      /**\n      * @param {?} app\n      * @return {?}\n      */\n      app => zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => app.auth())), shareReplay({\n        bufferSize: 1,\n        refCount: false\n      }));\n      this.authState = auth.pipe(switchMap(\n      /**\n      * @param {?} auth\n      * @return {?}\n      */\n      auth => new Observable(auth.onAuthStateChanged.bind(auth))), keepUnstableUntilFirst);\n    }\n\n  }\n\n  AngularFireAuthGuard.ɵfac = function AngularFireAuthGuard_Factory(t) {\n    return new (t || AngularFireAuthGuard)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Router));\n  };\n  /** @nocollapse */\n\n\n  /** @nocollapse */\n  AngularFireAuthGuard.ɵprov = ɵɵdefineInjectable({\n    factory: function AngularFireAuthGuard_Factory() {\n      return new AngularFireAuthGuard(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(NgZone), ɵɵinject(Router));\n    },\n    token: AngularFireAuthGuard,\n    providedIn: \"any\"\n  });\n  return AngularFireAuthGuard;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  AngularFireAuthGuard.prototype.authState;\n  /** @type {?} */\n\n  AngularFireAuthGuard.prototype.canActivate;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  AngularFireAuthGuard.prototype.router;\n}\n/** @type {?} */\n\n\nconst canActivate =\n/**\n* @param {?} pipe\n* @return {?}\n*/\npipe => ({\n  canActivate: [AngularFireAuthGuard],\n  data: {\n    authGuardPipe: pipe\n  }\n});\n\nconst ɵ1 =\n/**\n* @param {?} user\n* @return {?}\n*/\nuser => !!user && !user.isAnonymous;\n/** @type {?} */\n\n\nconst isNotAnonymous = /*#__PURE__*/map(ɵ1);\n\nconst ɵ2 =\n/**\n* @param {?} user\n* @return {?}\n*/\nuser => user ? user.getIdTokenResult() : of(null);\n/** @type {?} */\n\n\nconst idTokenResult = /*#__PURE__*/switchMap(ɵ2);\n\nconst ɵ3 =\n/**\n* @param {?} user\n* @return {?}\n*/\nuser => !!user && user.emailVerified;\n/** @type {?} */\n\n\nconst emailVerified = /*#__PURE__*/map(ɵ3);\n\nconst ɵ4 =\n/**\n* @param {?} idTokenResult\n* @return {?}\n*/\nidTokenResult => idTokenResult ? idTokenResult.claims : [];\n/** @type {?} */\n\n\nconst customClaims = /*#__PURE__*/pipe(idTokenResult, /*#__PURE__*/map(ɵ4));\n/** @type {?} */\n\nconst hasCustomClaim =\n/**\n* @param {?} claim\n* @return {?}\n*/\nclaim => pipe(customClaims, map(\n/**\n* @param {?} claims\n* @return {?}\n*/\nclaims => claims.hasOwnProperty(claim)));\n/** @type {?} */\n\n\nconst redirectUnauthorizedTo =\n/**\n* @param {?} redirect\n* @return {?}\n*/\nredirect => pipe(loggedIn, map(\n/**\n* @param {?} loggedIn\n* @return {?}\n*/\nloggedIn => loggedIn || redirect));\n/** @type {?} */\n\n\nconst redirectLoggedInTo =\n/**\n* @param {?} redirect\n* @return {?}\n*/\nredirect => pipe(loggedIn, map(\n/**\n* @param {?} loggedIn\n* @return {?}\n*/\nloggedIn => loggedIn && redirect || true));\n/**\n * @fileoverview added by tsickle\n * Generated from: auth-guard.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet AngularFireAuthGuardModule = /*#__PURE__*/(() => {\n  class AngularFireAuthGuardModule {}\n\n  AngularFireAuthGuardModule.ɵfac = function AngularFireAuthGuardModule_Factory(t) {\n    return new (t || AngularFireAuthGuardModule)();\n  };\n\n  AngularFireAuthGuardModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: AngularFireAuthGuardModule\n  });\n  AngularFireAuthGuardModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [AngularFireAuthGuard]\n  });\n  return AngularFireAuthGuardModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: angular-fire-auth-guard.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { AngularFireAuthGuard, AngularFireAuthGuardModule, canActivate, customClaims, emailVerified, hasCustomClaim, idTokenResult, isNotAnonymous, loggedIn, redirectLoggedInTo, redirectUnauthorizedTo }; //# sourceMappingURL=angular-fire-auth-guard.js.map","map":null,"metadata":{},"sourceType":"module"}