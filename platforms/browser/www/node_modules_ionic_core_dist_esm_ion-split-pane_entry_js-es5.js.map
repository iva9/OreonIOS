{"version":3,"mappings":"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","names":["splitPaneIosCss","splitPaneMdCss","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","constructor","hostRef","registerInstance","ionSplitPaneVisible","createEvent","visible","disabled","when","visibleChanged","detail","isPane","bind","emit","connectedCallback","customElements","whenDefined","_this","styleChildren","updateState","disconnectedCallback","rmL","undefined","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","render","mode","getIonMode","h","Host","class","getElement","toAdd","toRemove","add","remove","style","ios","md"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-06cd27b1.js';\nimport { b as getIonMode } from './ionic-global-a049bcbf.js';\n\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\nlet SplitPane = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n    this.when = QUERY['lg'];\n  }\n  visibleChanged(visible) {\n    const detail = { visible, isPane: this.isPane.bind(this) };\n    this.ionSplitPaneVisible.emit(detail);\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined') {\n      await customElements.whenDefined('ion-split-pane');\n    }\n    this.styleChildren();\n    this.updateState();\n  }\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n  updateState() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n    // Check if the split-pane is disabled\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    }\n    // When query is a boolean\n    const query = this.when;\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    }\n    // When query is a string, let's find first if it is a shortcut\n    const mediaQuery = QUERY[query] || query;\n    // Media query is empty or null, we hide it\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n    if (window.matchMedia) {\n      // Listen on media query\n      const callback = (q) => {\n        this.visible = q.matches;\n      };\n      const mediaList = window.matchMedia(mediaQuery);\n      mediaList.addListener(callback);\n      this.rmL = () => mediaList.removeListener(callback);\n      this.visible = mediaList.matches;\n    }\n  }\n  isPane(element) {\n    if (!this.visible) {\n      return false;\n    }\n    return element.parentElement === this.el\n      && element.classList.contains(SPLIT_PANE_SIDE);\n  }\n  styleChildren() {\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n        foundMain = true;\n      }\n      setPaneClass(child, isMain);\n    }\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible\n      } }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"visible\": [\"visibleChanged\"],\n    \"disabled\": [\"updateState\"],\n    \"when\": [\"updateState\"]\n  }; }\n};\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  }\n  else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\nSplitPane.style = {\n  ios: splitPaneIosCss,\n  md: splitPaneMdCss\n};\n\nexport { SplitPane as ion_split_pane };\n"]}