{"version":3,"mappings":"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","names":["accordionIosCss","accordionMdCss","Accordion","constructor","hostRef","registerInstance","updateListener","updateState","state","isNext","isPrevious","value","accordionIds","disabled","readonly","toggleIcon","toggleIconSlot","setItemDefaults","ionItem","getSlottedHeaderIonItem","button","detail","lines","undefined","headerEl","slot","querySelector","assignedElements","find","el","tagName","setAria","expanded","root","getElementRoot","setAttribute","slotToggleIcon","existingToggleIcon","iconEl","document","createElement","lazy","classList","add","icon","appendChild","expandAccordion","initialUpdate","contentEl","contentElWrapper","currentRaf","cancelAnimationFrame","shouldAnimate","raf","contentHeight","offsetHeight","waitForTransition","transitionEndAsync","style","setProperty","_this","removeProperty","collapseAccordion","window","prefersReducedMotion","matchMedia","matches","animated","config","accordionGroupEl","accordionGroup","accordionValue","shouldExpand","Array","isArray","includes","nextAccordion","getNextSibling","nextAccordionValue","previousAccordion","getPreviousSibling","previousAccordionValue","nextSibling","nextElementSibling","previousSibling","previousElementSibling","connectedCallback","closest","addEventListener","disconnectedCallback","removeEventListener","componentDidLoad","toggleExpanded","expand","requestAccordionToggle","render","mode","getIonMode","headerPart","contentPart","h","Host","class","onClick","id","part","ref","name","role","getElement","ios","md","accordionGroupIosCss","accordionGroupMdCss","AccordionGroup","ionChange","createEvent","valueChanged","multiple","emit","disabledChanged","_this2","getAccordions","accordions","accordion","readonlyChanged","_this3","onKeydown","ev","activeElement","accordionEl","closestGroup","_this4","startingIndex","findIndex","a","key","findNextAccordion","findPreviousAccordion","length","focus","_this5","accordionExpand","_this6","groupValue","processedValue","valueExists","v","filter","prevAccordion","from","_this7","querySelectorAll"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-accordion_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-06cd27b1.js';\nimport { c as config, b as getIonMode } from './ionic-global-a049bcbf.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers-eed79a2b.js';\n\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\n\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\n\nlet Accordion = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.updateListener = () => this.updateState(false);\n    this.state = 1 /* Collapsed */;\n    this.isNext = false;\n    this.isPrevious = false;\n    /**\n     * The value of the accordion. Defaults to an autogenerated\n     * value.\n     */\n    this.value = `ion-accordion-${accordionIds++}`;\n    /**\n     * If `true`, the accordion cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * The toggle icon to use. This icon will be\n     * rotated when the accordion is expanded\n     * or collapsed.\n     */\n    this.toggleIcon = 'chevron-down';\n    /**\n     * The slot inside of `ion-item` to\n     * place the toggle icon. Defaults to `'end'`.\n     */\n    this.toggleIconSlot = 'end';\n    this.setItemDefaults = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n    this.getSlottedHeaderIonItem = () => {\n      const { headerEl } = this;\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n      const slot = headerEl.querySelector('slot');\n      if (!slot) {\n        return;\n      }\n      // This is not defined in unit tests\n      const ionItem = slot.assignedElements && slot.assignedElements().find(el => el.tagName === 'ION-ITEM');\n      return ionItem;\n    };\n    this.setAria = (expanded = false) => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n      const root = getElementRoot(ionItem);\n      const button = root.querySelector('button');\n      if (!button) {\n        return;\n      }\n      button.setAttribute('aria-expanded', `${expanded}`);\n    };\n    this.slotToggleIcon = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      const { toggleIconSlot, toggleIcon } = this;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n      if (existingToggleIcon) {\n        return;\n      }\n      const iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n    this.expandAccordion = (initialUpdate = false) => {\n      if (initialUpdate) {\n        this.state = 4 /* Expanded */;\n        return;\n      }\n      if (this.state === 4 /* Expanded */) {\n        return;\n      }\n      const { contentEl, contentElWrapper } = this;\n      if (contentEl === undefined || contentElWrapper === undefined) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        raf(() => {\n          this.state = 8 /* Expanding */;\n          this.currentRaf = raf(async () => {\n            const contentHeight = contentElWrapper.offsetHeight;\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\n            await waitForTransition;\n            this.state = 4 /* Expanded */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 4 /* Expanded */;\n      }\n    };\n    this.collapseAccordion = (initialUpdate = false) => {\n      if (initialUpdate) {\n        this.state = 1 /* Collapsed */;\n        return;\n      }\n      if (this.state === 1 /* Collapsed */) {\n        return;\n      }\n      const { contentEl } = this;\n      if (contentEl === undefined) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        this.currentRaf = raf(async () => {\n          const contentHeight = contentEl.offsetHeight;\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\n          raf(async () => {\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            this.state = 2 /* Collapsing */;\n            await waitForTransition;\n            this.state = 1 /* Collapsed */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 1 /* Collapsed */;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n    this.shouldAnimate = () => {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n      if (prefersReducedMotion) {\n        return false;\n      }\n      const animated = config.get('animated', true);\n      if (!animated) {\n        return false;\n      }\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n        return false;\n      }\n      return true;\n    };\n    this.updateState = async (initialUpdate = false) => {\n      const accordionGroup = this.accordionGroupEl;\n      const accordionValue = this.value;\n      if (!accordionGroup) {\n        return;\n      }\n      const value = accordionGroup.value;\n      const shouldExpand = (Array.isArray(value)) ? value.includes(accordionValue) : value === accordionValue;\n      if (shouldExpand) {\n        this.expandAccordion(initialUpdate);\n        this.isNext = this.isPrevious = false;\n      }\n      else {\n        this.collapseAccordion(initialUpdate);\n        /**\n         * When using popout or inset,\n         * the collapsed accordion items\n         * may need additional border radius\n         * applied. Check to see if the\n         * next or previous accordion is selected.\n         */\n        const nextAccordion = this.getNextSibling();\n        const nextAccordionValue = nextAccordion && nextAccordion.value;\n        if (nextAccordionValue !== undefined) {\n          this.isPrevious = (Array.isArray(value)) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n        }\n        const previousAccordion = this.getPreviousSibling();\n        const previousAccordionValue = previousAccordion && previousAccordion.value;\n        if (previousAccordionValue !== undefined) {\n          this.isNext = (Array.isArray(value)) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n        }\n      }\n    };\n    this.getNextSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const nextSibling = this.el.nextElementSibling;\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return nextSibling;\n    };\n    this.getPreviousSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const previousSibling = this.el.previousElementSibling;\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return previousSibling;\n    };\n  }\n  connectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl = this.el && this.el.closest('ion-accordion-group');\n    if (accordionGroupEl) {\n      this.updateState(true);\n      addEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  disconnectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl;\n    if (accordionGroupEl) {\n      removeEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  componentDidLoad() {\n    this.setItemDefaults();\n    this.slotToggleIcon();\n    /**\n     * We need to wait a tick because we\n     * just set ionItem.button = true and\n     * the button has not have been rendered yet.\n     */\n    raf(() => {\n      /**\n       * Set aria label on button inside of ion-item\n       * once the inner content has been rendered.\n       */\n      const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n      this.setAria(expanded);\n    });\n  }\n  toggleExpanded() {\n    const { accordionGroupEl, value, state } = this;\n    if (accordionGroupEl) {\n      /**\n       * Because the accordion group may or may\n       * not allow multiple accordions open, we\n       * need to request the toggling of this\n       * accordion and the accordion group will\n       * make the decision on whether or not\n       * to allow it.\n       */\n      const expand = state === 1 /* Collapsed */ || state === 2 /* Collapsing */;\n      accordionGroupEl.requestAccordionToggle(value, expand);\n    }\n  }\n  render() {\n    const { disabled, readonly } = this;\n    const mode = getIonMode(this);\n    const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n    const headerPart = expanded ? 'header expanded' : 'header';\n    const contentPart = expanded ? 'content expanded' : 'content';\n    this.setAria(expanded);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-expanding': this.state === 8 /* Expanding */,\n        'accordion-expanded': this.state === 4 /* Expanded */,\n        'accordion-collapsing': this.state === 2 /* Collapsing */,\n        'accordion-collapsed': this.state === 1 /* Collapsed */,\n        'accordion-next': this.isNext,\n        'accordion-previous': this.isPrevious,\n        'accordion-disabled': disabled,\n        'accordion-readonly': readonly,\n        'accordion-animated': config.getBoolean('animated', true)\n      } }, h(\"div\", { onClick: () => this.toggleExpanded(), id: \"header\", part: headerPart, \"aria-controls\": \"content\", ref: headerEl => this.headerEl = headerEl }, h(\"slot\", { name: \"header\" })), h(\"div\", { id: \"content\", part: contentPart, role: \"region\", \"aria-labelledby\": \"header\", ref: contentEl => this.contentEl = contentEl }, h(\"div\", { id: \"content-wrapper\", ref: contentElWrapper => this.contentElWrapper = contentElWrapper }, h(\"slot\", { name: \"content\" })))));\n  }\n  static get delegatesFocus() { return true; }\n  get el() { return getElement(this); }\n};\nlet accordionIds = 0;\nAccordion.style = {\n  ios: accordionIosCss,\n  md: accordionMdCss\n};\n\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\n\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\nlet AccordionGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    /**\n     * If `true`, all accordions inside of the\n     * accordion group will animate when expanding\n     * or collapsing.\n     */\n    this.animated = true;\n    /**\n     * If `true`, the accordion group cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion group cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * Describes the expansion behavior for each accordion.\n     * Possible values are `\"compact\"` and `\"inset\"`.\n     * Defaults to `\"compact\"`.\n     */\n    this.expand = 'compact';\n  }\n  valueChanged() {\n    const { value, multiple } = this;\n    /**\n     * If accordion group does not\n     * let multiple accordions be open\n     * at once, but user passes an array\n     * just grab the first value.\n     */\n    if (!multiple && Array.isArray(value)) {\n      this.value = value[0];\n    }\n    else {\n      this.ionChange.emit({ value: this.value });\n    }\n  }\n  async disabledChanged() {\n    const { disabled } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n  async readonlyChanged() {\n    const { readonly } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    const accordionEl = (activeElement.tagName === 'ION-ACCORDION') ? activeElement : activeElement.closest('ion-accordion');\n    if (!accordionEl) {\n      return;\n    }\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n    if (closestGroup !== this.el) {\n      return;\n    }\n    // If the active accordion is not in the current array of accordions, do not do anything\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex(a => a === accordionEl);\n    if (startingIndex === -1) {\n      return;\n    }\n    let accordion;\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    }\n    else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n  }\n  /**\n   * @internal\n   */\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const { multiple, value, readonly, disabled } = this;\n    if (readonly || disabled) {\n      return;\n    }\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find(v => v === accordionValue);\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.value = [...processedValue, accordionValue];\n        }\n      }\n      else {\n        this.value = accordionValue;\n      }\n    }\n    else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.value = processedValue.filter(v => v !== accordionValue);\n      }\n      else {\n        this.value = undefined;\n      }\n    }\n  }\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1];\n    // tslint:disable-next-line:strict-type-predicates\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n    return nextAccordion;\n  }\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1];\n    // tslint:disable-next-line:strict-type-predicates\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n  render() {\n    const { disabled, readonly, expand } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true\n      }, role: \"presentation\" }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"readonly\": [\"readonlyChanged\"]\n  }; }\n};\nAccordionGroup.style = {\n  ios: accordionGroupIosCss,\n  md: accordionGroupMdCss\n};\n\nexport { Accordion as ion_accordion, AccordionGroup as ion_accordion_group };\n"]}